import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { getMyCreatures } from '../apolloClient/gqlQuery';
import client from "../apolloClient";
import { GetStaticProps, NextPage } from 'next'
import type { AppProps } from 'next/app'
import styled from 'styled-components';

const Img = styled.img`
        width:auto;
        margin:10px;
        `
const H1 = styled.h1`
  text-align: center;
  margin-bottom:50px;
`
const SinglePokemonDiv = styled.div`
  display: flex;
  flex-direction: column;
  span{
    font-weight:600;
    text-align:center;
    margin:20px 0 20px 0;
    font-size: 20px;
  }
  p{
    height:50%;
    display: flex;
    justify-content: space-around;
  }
  width:300px;
  box-shadow: 0 0 20px rgb(0 0 0 / 50%);
  margin: auto;
  height:400px;
  cursor: pointer;
  margin-bottom: 60px;
`
const PokemonsDiv = styled.div`
  margin:auto;
  width: 1199px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;

`
const Contentdiv = styled.div`
  margin:0 auto;
`

const Home: NextPage = ({data}: any) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <H1>My Pokemons!!</H1>
        <PokemonsDiv>
          {
            data.myCreatures && data.myCreatures.map((mycreature: any, index: number)=>{
              return (<SinglePokemonDiv key={index}>
                <p>
                  <Img src={mycreature.avatar.url}/>  
                </p>
                <span>{mycreature.pokemonName}</span>
                <Contentdiv>{mycreature.description.document[0].children[0].text}</Contentdiv>
              </SinglePokemonDiv>)
            })
          }
        </PokemonsDiv>
      </div>
      
    </div>
  )
}
export default Home;

export const getStaticProps: GetStaticProps = async (context) => {
  const { data } = await client.query({
    query: getMyCreatures,
  });
  return { props: { data: data } };
}